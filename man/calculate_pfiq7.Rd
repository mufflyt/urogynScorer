% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_pfiq7.R
\name{calculate_pfiq7}
\alias{calculate_pfiq7}
\title{Calculate PFIQ-7 (Pelvic Floor Impact Questionnaire) Scores}
\usage{
calculate_pfiq7(questionnaire_data, verbose = FALSE)
}
\arguments{
\item{questionnaire_data}{A data frame containing the PFIQ-7 responses with
21 columns (7 questions Ã— 3 domains). Column names should follow the pattern
'uiq1', 'uiq2', ..., 'craiq1', 'craiq2', ..., 'popiq1', 'popiq2', etc.}

\item{verbose}{Logical indicating whether to print detailed logging
information during calculation. Default is FALSE.}
}
\value{
A data frame with calculated scores for each domain (UIQ-7, CRAIQ-7,
POPIQ-7) and the total PFIQ-7 score. Each score ranges from 0 to 100, with
higher scores indicating greater impact on quality of life.
}
\description{
Calculates domain-specific and total scores from the PFIQ-7 questionnaire,
which measures the impact of pelvic floor disorders on quality of life across
three domains: urinary (UIQ-7), colorectal-anal (CRAIQ-7), and pelvic organ
prolapse (POPIQ-7).
}
\details{
The PFIQ-7 consists of three scales with 7 questions each:
\itemize{
\item UIQ-7: Questions about urinary symptoms
\item CRAIQ-7: Questions about colorectal-anal symptoms
\item POPIQ-7: Questions about pelvic organ prolapse symptoms
}

Each question is scored from 0 to 3:
\itemize{
\item 0: Not at all
\item 1: Somewhat
\item 2: Moderately
\item 3: Quite a bit
}

Domain scores are calculated by: (sum of domain item scores) * (100/21)
Total PFIQ-7 score is the sum of all three domain scores (range 0-300)
}
\examples{
# Example 1: Basic usage with minimal data
sample_data <- data.frame(
  uiq1 = c(1, 2, 0), uiq2 = c(2, 1, 1), uiq3 = c(0, 0, 0),
  uiq4 = c(1, 2, 1), uiq5 = c(3, 2, 0), uiq6 = c(0, 1, 0),
  uiq7 = c(2, 2, 1),
  craiq1 = c(0, 1, 0), craiq2 = c(1, 0, 0), craiq3 = c(0, 0, 0),
  craiq4 = c(0, 1, 0), craiq5 = c(0, 0, 0), craiq6 = c(1, 0, 0),
  craiq7 = c(0, 0, 0),
  popiq1 = c(2, 3, 0), popiq2 = c(1, 2, 0), popiq3 = c(2, 1, 0),
  popiq4 = c(0, 0, 0), popiq5 = c(1, 0, 0), popiq6 = c(2, 1, 0),
  popiq7 = c(3, 2, 0)
)
calculate_pfiq7(sample_data)

# Example 2: Using verbose mode for detailed logging
sample_data_2 <- data.frame(
  uiq1 = c(2, 3), uiq2 = c(1, 3), uiq3 = c(1, 2),
  uiq4 = c(2, 3), uiq5 = c(1, 2), uiq6 = c(0, 2),
  uiq7 = c(0, 1),
  craiq1 = c(0, 1), craiq2 = c(0, 0), craiq3 = c(1, 0),
  craiq4 = c(0, 0), craiq5 = c(0, 0), craiq6 = c(0, 1),
  craiq7 = c(1, 0),
  popiq1 = c(0, 1), popiq2 = c(0, 0), popiq3 = c(0, 0),
  popiq4 = c(0, 1), popiq5 = c(0, 0), popiq6 = c(0, 0),
  popiq7 = c(0, 0)
)
calculate_pfiq7(sample_data_2, verbose = TRUE)

# Example 3: Handling missing data with verbose logging
sample_data_3 <- data.frame(
  uiq1 = c(1, 2, NA), uiq2 = c(2, 1, 1), uiq3 = c(0, 0, 0),
  uiq4 = c(1, NA, 1), uiq5 = c(3, 2, 0), uiq6 = c(0, 1, 0),
  uiq7 = c(2, 2, 1),
  craiq1 = c(0, 1, 0), craiq2 = c(NA, 0, 0), craiq3 = c(0, 0, 0),
  craiq4 = c(0, 1, NA), craiq5 = c(0, 0, 0), craiq6 = c(1, 0, 0),
  craiq7 = c(0, 0, 0),
  popiq1 = c(2, 3, 0), popiq2 = c(1, NA, 0), popiq3 = c(2, 1, 0),
  popiq4 = c(0, 0, 0), popiq5 = c(1, 0, NA), popiq6 = c(2, 1, 0),
  popiq7 = c(NA, 2, 0)
)
calculate_pfiq7(sample_data_3, verbose = TRUE)

}
